local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

local gui = script.Parent
local petNameBox = gui:WaitForChild("PetNameBox")
local spawnBtn = gui:WaitForChild("SpawnBtn")
local tooltip = gui:WaitForChild("Tooltip")

-- Rarity Buttons
local rarities = {"NP", "R", "F", "FR", "Neon", "NR", "NF", "NFR", "M", "MR", "MF", "MFR"}
local currentRarity = "NP"

for _, rarity in ipairs(rarities) do
	local btn = gui:FindFirstChild(rarity)
	if btn then
		btn.MouseButton1Click:Connect(function()
			currentRarity = rarity
			print("Selected rarity:", rarity)
		end)
	end
end

-- Tooltip function
local function showTooltip(name, rarity, age)
	tooltip.Text = "Name: " .. name .. "\nRarity: " .. rarity .. "\nAge: " .. age
	tooltip.Visible = true
	task.delay(5, function()
		if tooltip.Text:find(name) then
			tooltip.Visible = false
		end
	end)
end

-- Spawning Logic
spawnBtn.MouseButton1Click:Connect(function()
	local petBaseName = petNameBox.Text
	if petBaseName == "" then return end

	local petFolder = ReplicatedStorage:FindFirstChild("Pets")
	if not petFolder then warn("Missing 'Pets' folder in ReplicatedStorage") return end

	local petTemplate = petFolder:FindFirstChild(petBaseName)
	if not petTemplate then
		showTooltip(petBaseName, "Not Found", "-")
		return
	end

	local pet = petTemplate:Clone()
	local root = pet.PrimaryPart or pet:FindFirstChildWhichIsA("BasePart")
	if not root then
		warn("Pet has no PrimaryPart or base part.")
		showTooltip(petBaseName, "Invalid Model", "-")
		return
	end

	-- Spawn position
	local charRoot = character:WaitForChild("HumanoidRootPart")
	pet:SetPrimaryPartCFrame(charRoot.CFrame * CFrame.new(3, 0, 0))
	pet.Parent = workspace

	showTooltip(petBaseName, currentRarity, "Newborn")
end)
