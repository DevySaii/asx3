-- Saii's Pet Spawner GUI

-- GUI Setup
local Spawner = Instance.new("ScreenGui")
local Main = Instance.new("Frame")
local Title = Instance.new("TextLabel")
local UICorner = Instance.new("UICorner")
local NameBox = Instance.new("TextBox")
local UICorner_Name = Instance.new("UICorner")
local Spawn = Instance.new("TextButton")
local UICorner_Spawn = Instance.new("UICorner")

Spawner.Name = "SaiiScript"
Spawner.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
Spawner.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Main.Name = "Main"
Main.Parent = Spawner
Main.AnchorPoint = Vector2.new(0.5, 0.5)
Main.Position = UDim2.new(0.5, 0, 0.5, 0)
Main.Size = UDim2.new(0, 500, 0, 360)
Main.BackgroundColor3 = Color3.fromRGB(30, 30, 30)

UICorner.CornerRadius = UDim.new(0, 10)
UICorner.Parent = Main

Title.Name = "Title"
Title.Parent = Main
Title.Size = UDim2.new(1, 0, 0, 40)
Title.BackgroundTransparency = 1
Title.Font = Enum.Font.GothamBold
Title.Text = "Saii's Script - Pet Spawner"
Title.TextColor3 = Color3.fromRGB(0, 255, 100)
Title.TextScaled = true

NameBox.Name = "NameBox"
NameBox.Parent = Main
NameBox.Position = UDim2.new(0.5, 0, 0.3, 0)
NameBox.AnchorPoint = Vector2.new(0.5, 0)
NameBox.Size = UDim2.new(0.9, 0, 0.1, 0)
NameBox.Font = Enum.Font.Gotham
NameBox.PlaceholderText = "Enter Pet Name"
NameBox.Text = ""
NameBox.TextColor3 = Color3.fromRGB(255, 255, 255)
NameBox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
NameBox.TextScaled = true

UICorner_Name.CornerRadius = UDim.new(0, 6)
UICorner_Name.Parent = NameBox

Spawn.Name = "Spawn"
Spawn.Parent = Main
Spawn.Position = UDim2.new(0.5, 0, 0.5, 0)
Spawn.AnchorPoint = Vector2.new(0.5, 0)
Spawn.Size = UDim2.new(0.5, 0, 0.1, 0)
Spawn.Font = Enum.Font.GothamBold
Spawn.Text = "Spawn All Types"
Spawn.TextColor3 = Color3.fromRGB(255, 255, 255)
Spawn.BackgroundColor3 = Color3.fromRGB(0, 200, 100)
Spawn.TextScaled = true

UICorner_Spawn.CornerRadius = UDim.new(0, 6)
UICorner_Spawn.Parent = Spawn

-- Pet Spawning Logic
Spawn.MouseButton1Click:Connect(function()
    local petName = NameBox.Text
    if petName == "" then return end

    local Loads = require(game.ReplicatedStorage.Fsys).load
    local ClientData = Loads("ClientData")
    local InventoryDB = Loads("InventoryDB")
    local Inventory = ClientData.get("inventory")

    local function cloneTable(original)
        local copy = {}
        for k, v in pairs(original) do
            copy[k] = typeof(v) == "table" and cloneTable(v) or v
        end
        return copy
    end

    local function createPet(name, props)
        for _, category in pairs(InventoryDB) do
            for _, item in pairs(category) do
                if item.name == name then
                    local uuid = game.HttpService:GenerateGUID(false)
                    local n_item = cloneTable(item)
                    n_item.unique = "uuid_" .. uuid
                    n_item.category = "pets"
                    n_item.properties = props
                    n_item.newness_order = math.random(1, 900000)

                    Inventory["pets"] = Inventory["pets"] or {}
                    Inventory["pets"][uuid] = n_item
                    return
                end
            end
        end
    end

    local petVariants = {
        {label = "NP",  props = {rideable=false, flyable=false, neon=false, mega_neon=false}},
        {label = "F",   props = {rideable=false, flyable=true,  neon=false, mega_neon=false}},
        {label = "R",   props = {rideable=true,  flyable=false, neon=false, mega_neon=false}},
        {label = "FR",  props = {rideable=true,  flyable=true,  neon=false, mega_neon=false}},
        {label = "Neon",props = {rideable=false, flyable=false, neon=true,  mega_neon=false}},
        {label = "NR",  props = {rideable=true,  flyable=false, neon=true,  mega_neon=false}},
        {label = "NF",  props = {rideable=false, flyable=true,  neon=true,  mega_neon=false}},
        {label = "NFR", props = {rideable=true,  flyable=true,  neon=true,  mega_neon=false}},
        {label = "M",   props = {rideable=false, flyable=false, neon=true,  mega_neon=true}},
        {label = "MR",  props = {rideable=true,  flyable=false, neon=true,  mega_neon=true}},
        {label = "MF",  props = {rideable=false, flyable=true,  neon=true,  mega_neon=true}},
        {label = "MFR", props = {rideable=true,  flyable=true,  neon=true,  mega_neon=true}},
    }

    for _, variant in pairs(petVariants) do
        variant.props.age = 1
        createPet(petName, variant.props)
    end
end)

-- GUI Draggable Support
local UIS = game:GetService("UserInputService")
local dragging, dragStart, startPos

Main.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = Main.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

Main.InputChanged:Connect(function(input)
    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local delta = input.Position - dragStart
        Main.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
                                  startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)
