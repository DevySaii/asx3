--‚ö° Saii's Pet Spawner GUI (Full Rewrite)
--‚úÖ Written by ChatGPT (Mega Bat Dragon ready)

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()

local petType = "NP"
local currentPet = nil
local petEquipped = false

-- GUI SETUP
local Spawner = Instance.new("ScreenGui", LocalPlayer:WaitForChild("PlayerGui"))
Spawner.Name = "Spawner"
Spawner.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
Spawner.ResetOnSpawn = false

local Main = Instance.new("Frame", Spawner)
Main.Size = UDim2.new(0, 500, 0, 340)
Main.Position = UDim2.new(0.5, -250, 0.5, -170)
Main.AnchorPoint = Vector2.new(0.5, 0.5)
Main.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
Instance.new("UICorner", Main).CornerRadius = UDim.new(0, 12)
local stroke = Instance.new("UIStroke", Main)
stroke.Color = Color3.fromRGB(40, 255, 60)
stroke.Thickness = 1

-- Dragging
local dragging, dragStart, startPos
Main.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = true
		dragStart = input.Position
		startPos = Main.Position
	end
end)
Main.InputEnded:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then dragging = false end
end)
game:GetService("UserInputService").InputChanged:Connect(function(input)
	if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
		local delta = input.Position - dragStart
		Main.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end
end)

-- Title
local Title = Instance.new("TextLabel", Main)
Title.Size = UDim2.new(1, 0, 0, 40)
Title.Text = "‚ö° Saii's Pet Spawner"
Title.Font = Enum.Font.GothamBlack
Title.TextColor3 = Color3.fromRGB(0, 255, 100)
Title.TextSize = 24
Title.BackgroundTransparency = 1

-- Pet Type Buttons
local buttonTypes = {"NP", "F", "R", "FR", "N", "NR", "NF", "NFR", "M", "MR", "MF", "MFR"}
local buttons = {}

local function resetColors()
	for _, btn in ipairs(buttons) do
		btn.TextColor3 = Color3.fromRGB(255, 255, 255)
		btn.UIStroke.Color = Color3.fromRGB(40, 40, 40)
	end
end

for i, name in ipairs(buttonTypes) do
	local btn = Instance.new("TextButton", Main)
	btn.Size = UDim2.new(0, 90, 0, 35)
	btn.Position = UDim2.new(0, 15 + ((i - 1) % 4) * 115, 0, 50 + math.floor((i - 1) / 4) * 40)
	btn.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	btn.Text = name
	btn.Font = Enum.Font.GothamBold
	btn.TextScaled = true
	btn.TextColor3 = Color3.fromRGB(255, 255, 255)

	local corner = Instance.new("UICorner", btn)
	corner.CornerRadius = UDim.new(0, 8)

	local stroke = Instance.new("UIStroke", btn)
	stroke.Color = Color3.fromRGB(40, 40, 40)
	stroke.Thickness = 1

	btn.MouseEnter:Connect(function()
		if petType ~= name then btn.TextColor3 = Color3.fromRGB(80, 255, 80) end
	end)
	btn.MouseLeave:Connect(function()
		if petType ~= name then btn.TextColor3 = Color3.fromRGB(255, 255, 255) end
	end)
	btn.MouseButton1Click:Connect(function()
		resetColors()
		btn.TextColor3 = Color3.fromRGB(25, 255, 21)
		btn.UIStroke.Color = Color3.fromRGB(0, 255, 100)
		petType = name
	end)

	table.insert(buttons, btn)
end

-- Name Input
local NameBox = Instance.new("TextBox", Main)
NameBox.Size = UDim2.new(0, 400, 0, 40)
NameBox.Position = UDim2.new(0.5, -200, 1, -90)
NameBox.PlaceholderText = "Enter Pet Name..."
NameBox.Text = ""
NameBox.Font = Enum.Font.Gotham
NameBox.TextScaled = true
NameBox.TextColor3 = Color3.fromRGB(255, 255, 255)
NameBox.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Instance.new("UICorner", NameBox).CornerRadius = UDim.new(0, 8)
local nameStroke = Instance.new("UIStroke", NameBox)
nameStroke.Color = Color3.fromRGB(50, 255, 100)
nameStroke.Thickness = 1

-- Spawn Button
local Spawn = Instance.new("TextButton", Main)
Spawn.Size = UDim2.new(0, 180, 0, 40)
Spawn.Position = UDim2.new(0.5, -90, 1, -40)
Spawn.Text = "üéØ Spawn Pet"
Spawn.Font = Enum.Font.GothamBlack
Spawn.TextScaled = true
Spawn.TextColor3 = Color3.fromRGB(255, 255, 255)
Spawn.BackgroundColor3 = Color3.fromRGB(20, 80, 20)
Instance.new("UICorner", Spawn).CornerRadius = UDim.new(0, 10)
local spawnStroke = Instance.new("UIStroke", Spawn)
spawnStroke.Color = Color3.fromRGB(0, 255, 100)
spawnStroke.Thickness = 2

-- Utility
local function clone(tbl)
	local new = {}
	for k, v in pairs(tbl) do
		new[k] = typeof(v) == "table" and clone(v) or v
	end
	return new
end

local function generate_props()
	return {
		flyable = petType:find("F") ~= nil,
		rideable = petType:find("R") ~= nil,
		neon = petType:find("N") ~= nil,
		mega_neon = petType:find("M") ~= nil,
		age = 1,
	}
end

-- Follower
local function followPlayer(pet)
	local RunService = game:GetService("RunService")
	RunService:BindToRenderStep("FollowPet", Enum.RenderPriority.Character.Value + 1, function()
		if pet and pet:FindFirstChild("PrimaryPart") and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
			local target = LocalPlayer.Character.HumanoidRootPart.Position + Vector3.new(-3, 0, 3)
			local current = pet.PrimaryPart.Position
			local newPos = current:Lerp(target, 0.1)
			pet:SetPrimaryPartCFrame(CFrame.new(newPos))
		end
	end)
end

-- Pet Spawn Logic
local function spawnPetModel(petName)
	if currentPet then
		currentPet:Destroy()
		currentPet = nil
		petEquipped = false
	end

	local petsFolder = game.ReplicatedStorage:FindFirstChild("Pets")
	if not petsFolder then
		warn("[‚ùå] Pets folder not found in ReplicatedStorage.")
		return
	end

	local petModel = petsFolder:FindFirstChild(petName)
	if petModel then
		print("[‚úÖ] Found pet model:", petName)
		local clone = petModel:Clone()
		clone:SetPrimaryPartCFrame(LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(3, 0, 3))
		clone.Parent = workspace
		currentPet = clone
		petEquipped = true
		followPlayer(clone)
	else
		warn("[‚ùå] Pet model not found:", petName)
	end
end

-- Register to Inventory (bypassing DB lookup)
local function registerPetInventory(petName)
	local Fsys = require(game.ReplicatedStorage.Fsys)
	local Loads = Fsys.load
	local ClientData = Loads("ClientData")
	local Inventory = ClientData.get("inventory")

	local newItem = {
		name = petName,
		unique = "uuid_" .. game.HttpService:GenerateGUID(false),
		category = "pets",
		properties = generate_props(),
		equipped = true,
		newness_order = math.random(1, 999999),
	}

	Inventory.pets = Inventory.pets or {}
	Inventory.pets[newItem.unique] = newItem

	local invService = Loads("InventoryService")
	if invService and invService.equipPet then
		invService.equipPet(newItem.unique)
	end
end

-- Spawn Button Event
Spawn.MouseButton1Click:Connect(function()
	local name = NameBox.Text
	if name ~= "" then
		spawnPetModel(name)
		if petEquipped then
			registerPetInventory(name)
		end
	end
end)
