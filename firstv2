local function registerAndEquipPet(petName)
	local fsys = require(ReplicatedStorage.Fsys).load
	local ClientData = fsys("ClientData")
	local InventoryDB = fsys("InventoryDB")
	local Inventory = ClientData.get("inventory")
	local InventoryService = fsys("InventoryService")

	for _, pets in pairs(InventoryDB) do
		for _, item in pairs(pets) do
			if item.name:lower() == petName:lower() then
				local newItem = deepCopy(item)
				local uuid = "uuid_" .. HttpService:GenerateGUID(false)
				newItem.unique = uuid
				newItem.category = "pets"
				newItem.properties = getProperties()
				newItem.equipped = true
				newItem.newness_order = math.random(1, 999999)
				Inventory.pets = Inventory.pets or {}
				Inventory.pets[uuid] = newItem

				-- Equip using InventoryService
				if InventoryService and InventoryService.equipPet then
					InventoryService.equipPet(uuid)
				end

				-- Fire event manually to sync the visual model
				local equipSignal = ReplicatedStorage:FindFirstChild("OnPetEquipped")
				if equipSignal then
					equipSignal:FireClient(LocalPlayer, petName)
				end

				return true
			end
		end
	end
	return false
end

-- üü¢ Spawn Button: now spawns + equips + visuals
spawnBtn.MouseButton1Click:Connect(function()
	local name = nameBox.Text
	if name and name ~= "" then
		local success = registerAndEquipPet(name)
		if not success then
			warn("‚ùå Pet not found in InventoryDB!")
		end
	end
end)
