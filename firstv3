local function duplicatePet(name)
	local Loads = require(game.ReplicatedStorage.Fsys).load
	local ClientData = Loads("ClientData")
	local InventoryDB = Loads("InventoryDB")
	local Inventory = ClientData.get("inventory")

	-- Load all relevant APIs
	local FlyAPI = Loads("AdoptAPI/FlyPet")
	local RideAPI = Loads("AdoptAPI/RidePet")
	local FlyParent = Loads("AdoptAPI/FlyParent")
	local RideParent = Loads("AdoptAPI/RideParent")

	-- Make sure pets table exists
	Inventory.pets = Inventory.pets or {}

	-- Search and duplicate matching pet
	for _, pets in pairs(InventoryDB) do
		for id, item in pairs(pets) do
			if item.name:lower() == name:lower() then
				local newItem = {}
				for k, v in pairs(item) do
					newItem[k] = typeof(v) == "table" and table.clone(v) or v
				end

				local uuid = "uuid_" .. game.HttpService:GenerateGUID(false)
				newItem.unique = uuid
				newItem.category = "pets"
				newItem.newness_order = math.random(1, 999999)
				newItem.properties = {
					age = 1,
					neon = petType:find("N") and not petType:find("M"),
					mega_neon = petType:find("M") ~= nil
				}

				-- Add pet to inventory
				Inventory.pets[uuid] = newItem

				-- Apply Fly & Ride using proper APIs
				if petType:find("F") then
					FlyParent:Add(uuid)
					FlyAPI:Add(uuid)
				end
				if petType:find("R") then
					RideParent:Add(uuid)
					RideAPI:Add(uuid)
				end

				return -- Pet found and duplicated, exit
			end
		end
	end
end
