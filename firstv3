local function duplicatePet(name, petType)
	local Inventory = ClientData.get("inventory")
	Inventory.pets = Inventory.pets or {}

	for _, pets in pairs(InventoryDB) do
		for _, item in pairs(pets) do
			if item.name:lower() == name:lower() then
				local newItem = clone(item)
				local uuid = "uuid_" .. HttpService:GenerateGUID(false)

				newItem.unique = uuid
				newItem.category = "pets"
				newItem.newness_order = math.random(1, 999999)
				newItem.properties = {
					age = 1,
					neon = petType:find("N") and not petType:find("NP") or false,
					mega_neon = petType:find("M") and not petType:find("NP") or false
				}

				Inventory.pets[uuid] = newItem

				-- Safe API calls for ride and fly based on petType
				local success, err

				if petType:find("R") then
					success, err = pcall(function()
						RidePetAPI:Add(uuid)
						RideParentAPI:Add(uuid)
					end)
					if not success then warn("Ride failed:", err) end
				end

				if petType:find("F") then
					success, err = pcall(function()
						FlyPetAPI:Add(uuid)
					end)
					if not success then warn("Fly failed:", err) end
				end

				print("Pet spawned:", name, "UUID:", uuid)
				return
			end
		end
	end

	warn("Could not find pet:", name)
end
